import com.github.spotbugs.SpotBugsTask

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.6.3/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id("java-library")
    id("checkstyle")
    id("com.github.spotbugs") version "2.0.0"
    id("jacoco")
}

group = "gg.sep"
version = "1.1.0-SNAPSHOT"

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.+'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.5.+'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.+'
}

checkstyle {
    ignoreFailures false
    toolVersion "8.22"
}

spotbugs {
    setIgnoreFailures(false)
    toolVersion = "3.1.12"
}

tasks.withType(SpotBugsTask) {
    reports.xml.enabled = false
    reports.html.enabled = true
}

jacocoTestReport {
    reports {
        html.enabled = true
        html.destination file("${buildDir}/reports/jacoco/html")
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.0 // TODO
            }
        }
    }
}
jacocoTestReport.dependsOn test
check.dependsOn jacocoTestCoverageVerification

// unchecked and deprecation should produce warnings
compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
}
